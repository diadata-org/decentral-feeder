name: decentralized-feeder-pull-request-pipeline

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:  # This allows manual triggering

permissions:
  contents: read
  packages: write

env:
  ACTIONS_STEP_DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG }}  # Set debug mode globally

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      # Get dependencies
      - name: Get dependencies
        run: go mod tidy

      # Build the Go application
      - name: Build
        run: go build -v ./...

      # Test the Go application
      - name: Test
        run: go test -v ./...

  push_image_and_update_manifest:
    runs-on: ubuntu-latest
    needs: build_and_test
    environment:
      name: dia-testspace  # BEFORE GOING PUBLIC CHANGE THE ENV PROTENTIOC RULES TO INCLUDE THIS 
    steps:
      # Checkout decentralized feeder repo
      - uses: actions/checkout@v4

      # Get Short Commit Hash of the Merge Commit
      - name: Get Short Commit Hash
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

      # Checkout the lumina-infra repository
      - name: Checkout lumina-infra repository
        env:
          LUMINA_INFRA_PAT: ${{ secrets.LUMINA_INFRA_PAT }}
        run: |
          git clone -q https://$LUMINA_INFRA_PAT@github.com/diadata-org/lumina-infra lumina-infra

      # Install IBM Cloud CLI and Container Registry CLI
      - name: Install IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud plugin install container-registry -f

      # Log in to IBM Cloud
      - name: Log in to IBM Cloud
        env:
          IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
        run: |
          ibmcloud login --apikey $IBM_CLOUD_API_KEY --no-region
          ibmcloud target -r us-south
          ibmcloud target -g Default

      # Build and Tag the Docker image with the commit hash
      - name: Build and Tag Docker image
        run: |
          docker build -f build/Dockerfile-diaDecentralOracleService -t us.icr.io/dia-registry/oracles/diadecentraloracleservice:commit-hash-${{ env.COMMIT_HASH }} .

      # Push the Docker image to IBM Cloud Container Registry
      - name: Push Docker image
        run: |
          ibmcloud cr login
          docker push us.icr.io/dia-registry/oracles/diadecentraloracleservice:commit-hash-${{ env.COMMIT_HASH }}

          - name: Update Helm manifests for nodes 017-021 (repository.tag)
          env:
            LUMINA_INFRA_PAT: ${{ secrets.LUMINA_INFRA_PAT }}
          run: |
            # Navigate to the helm-deployments/apps directory in the cloned repository
            cd lumina-infra/argocd/helm-deployments/apps
        
            # Loop over each node file and update the repository.tag line
            for node in 017 018 019 020 021; do
              echo "Updating values-node${node}.yaml"
              sed -i "s/^\(\s*tag:\s*\)commit-hash-[a-zA-Z0-9]\+/\1commit-hash-${{ env.COMMIT_HASH }}/" values-node${node}.yaml
            done
        
            # Configure Git with a generic identity for the commit
            git config user.email "actions@github.com"
            git config user.name "GitHub Actions"
        
            # Check if there are any changes; if yes, commit and push them.
            if [ -n "$(git status --porcelain)" ]; then
              git add values-node*.yaml
              git commit -m "Update repository tag in values-node017-021.yaml to commit-hash-${{ env.COMMIT_HASH }}"
              git push origin master
            else
              echo "No changes detected in values-node*.yaml; nothing to commit."
            fi
      
        

      # Cleanup the cloned repository
      - name: Cleanup cloned repository and log out from IBM
        run: |
          rm -rf lumina-infra
          ibmcloud logout
