name: decentralized-feeder-pull-request-pipeline

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:  # This allows manual triggering

permissions:
  contents: read
  packages: write

env:
  ACTIONS_STEP_DEBUG: ${{ secrets.ACTIONS_STEP_DEBUG }}  # Set debug mode globally

jobs:
  push_image_and_deploy:
    runs-on: ubuntu-latest
    environment:
      name: dia-testspace  # BEFORE GOING PUBLIC CHANGE THE ENV PROTENTIOC RULES TO INCLUDE THIS 
    steps:
      # Checkout decentralized feeder repo
      - uses: actions/checkout@v4

      # Get Short Commit Hash of the Merge Commit
      - name: Get Short Commit Hash
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

      # Checkout the lumina-infra repository
      - name: Checkout lumina-infra repository
        env:
          LUMINA_INFRA_PAT: ${{ secrets.LUMINA_INFRA_PAT }}
        run: |
          rm -rf lumina-infra
          git clone -q https://$LUMINA_INFRA_PAT@github.com/diadata-org/lumina-infra lumina-infra

      # Install IBM Cloud CLI and Container Registry CLI
      - name: Install IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud plugin install container-registry -f

      # Log in to IBM Cloud
      - name: Log in to IBM Cloud
        env:
          IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
        run: |
          ibmcloud login --apikey $IBM_CLOUD_API_KEY --no-region
          ibmcloud target -r us-south
          ibmcloud target -g Default

      # Build and Tag the Docker images with the commit hash
      - name: Build and Tag Docker images
        run: |
          docker build -f build/Dockerfile-luminaScraperFeeder -t us.icr.io/dia-registry/oracles/diadecentraloracleservice:commit-hash-${{ env.COMMIT_HASH }} .
          docker build -f build/Dockerfile-luminaSimulationFeeder -t us.icr.io/dia-registry/oracles/luminasimulationfeeder:commit-hash-${{ env.COMMIT_HASH }} .

      # Push both Docker images to IBM Cloud Container Registry
      - name: Push Docker images
        run: |
          ibmcloud cr login
          docker push us.icr.io/dia-registry/oracles/diadecentraloracleservice:commit-hash-${{ env.COMMIT_HASH }}
          docker push us.icr.io/dia-registry/oracles/luminasimulationfeeder:commit-hash-${{ env.COMMIT_HASH }}

      # Configure AWS credentials and push to ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag and push images to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: commit-hash-${{ env.COMMIT_HASH }}
        run: |
          # Tag and push scraper image to ECR
          docker tag us.icr.io/dia-registry/oracles/diadecentraloracleservice:${IMAGE_TAG} \
            ${ECR_REGISTRY}/lumina/decentralized-feeder:${IMAGE_TAG}
          docker push ${ECR_REGISTRY}/lumina/decentralized-feeder:${IMAGE_TAG}

          # Tag and push simulation image to ECR
          docker tag us.icr.io/dia-registry/oracles/luminasimulationfeeder:${IMAGE_TAG} \
            ${ECR_REGISTRY}/lumina/simulation-feeder:${IMAGE_TAG}
          docker push ${ECR_REGISTRY}/lumina/simulation-feeder:${IMAGE_TAG}

          echo "✅ Pushed images to AWS ECR:"
          echo "  ${ECR_REGISTRY}/lumina/decentralized-feeder:${IMAGE_TAG}"
          echo "  ${ECR_REGISTRY}/lumina/simulation-feeder:${IMAGE_TAG}"

      # Update AWS testnet feeder image tags in lumina-infra
      - name: Update AWS testnet feeder values and push to lumina-infra
        env:
          LUMINA_INFRA_PAT: ${{ secrets.LUMINA_INFRA_PAT }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          cd lumina-infra

          # Configure git
          git config user.name "DIA Lumina Bot"
          git config user.email "infrastructure@diadata.org"

          # Update image registry and tag for testnet scraper feeders
          SCRAPER_FEEDERS="001-scraper-testnet-aws 007-scraper-testnet-aws 008-scraper-testnet-aws 009-scraper-testnet-aws"
          for feeder in $SCRAPER_FEEDERS; do
            VALUES_FILE="helmcharts/decentral-feeders-aws/${feeder}/values.yaml"
            if [ -f "$VALUES_FILE" ]; then
              echo "Updating $VALUES_FILE"
              sed -i "s|image: [^,]*|image: ${ECR_REGISTRY}/lumina/decentralized-feeder|" "$VALUES_FILE"
              sed -i "s|tag: [^}]*|tag: commit-hash-${{ env.COMMIT_HASH }}|" "$VALUES_FILE"
            fi
          done

          # Update image registry and tag for testnet simulation feeders
          SIMULATION_FEEDERS="102-simulation-testnet-aws 103-simulation-testnet-aws"
          for feeder in $SIMULATION_FEEDERS; do
            VALUES_FILE="helmcharts/decentral-feeders-aws/${feeder}/values.yaml"
            if [ -f "$VALUES_FILE" ]; then
              echo "Updating $VALUES_FILE"
              sed -i "s|image: [^,]*|image: ${ECR_REGISTRY}/lumina/simulation-feeder|" "$VALUES_FILE"
              sed -i "s|tag: [^}]*|tag: commit-hash-${{ env.COMMIT_HASH }}|" "$VALUES_FILE"
            fi
          done

          # Show what changed
          echo "Changes to be committed:"
          git diff helmcharts/decentral-feeders-aws/*/values.yaml

          # Commit and push if there are changes
          if ! git diff --quiet; then
            git add helmcharts/decentral-feeders-aws/*/values.yaml
            git commit -m "PR #${{ github.event.pull_request.number }}: Update AWS testnet feeders to commit-hash-${{ env.COMMIT_HASH }}"
            git push https://$LUMINA_INFRA_PAT@github.com/diadata-org/lumina-infra.git HEAD:master
            echo "✅ Pushed updates to lumina-infra. ArgoCD will sync AWS testnet feeders automatically."
          else
            echo "ℹ️  No changes to commit"
          fi

          cd ..

      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: IBM Cluster kubectl config 
        env:
          TOKEN: ${{ secrets.K8S_SERVICE_ACCOUNT_TOKEN_PROD }}
          CLUSTER_NAME: ${{ secrets.K8s_CLUSTER_NAME_IBM }}
          CONTEXT: ${{ secrets.K8s_CONTEXT_IBM }}
          API_SERVER:  ${{ secrets.K8S_API_SERVER_IBM }} 
          KUBE_CA_CERT_BASE64: ${{ secrets.KUBE_CA_CERT_BASE64_IBM }}
          SERVICE_ACCOUNT: ${{ secrets.K8S_SA }}
        run: |
          # Ensure token does not contain unexpected newline characters
          TOKEN=$(echo "$TOKEN" | tr -d '\n')
          # Decode the base64-encoded CA certificate and save it to a file
          echo "$KUBE_CA_CERT_BASE64" | base64 --decode > /tmp/ca.pem
          # Set cluster using the CA PEM file
          kubectl config set-cluster "$CLUSTER_NAME" \
            --server="$API_SERVER" \
            --certificate-authority=/tmp/ca.pem
          # Set credentials
          kubectl config set-credentials $SERVICE_ACCOUNT --token="$TOKEN"
          # Set context
          kubectl config set-context $CONTEXT --cluster="$CLUSTER_NAME" --user=$SERVICE_ACCOUNT 
          # Use context
          kubectl config use-context $CONTEXT

      - name: Helm upgrade/install feeders
        run: |
          cd lumina-infra/helmcharts/decentral-feeders/001-scraper-testnet-ibm
          helm upgrade --install -n dia-lumina \
            --set repository.tag="commit-hash-${{ env.COMMIT_HASH }}" \
            001-scraper-testnet .
          cd ../101-simulation-testnet-ibm
          helm upgrade --install -n dia-lumina \
            --set repository.tag="commit-hash-${{ env.COMMIT_HASH }}" \
            101-simulation-testnet .
          cd ../007-scraper-testnet-ibm
            helm upgrade --install -n dia-lumina \
              --set repository.tag="commit-hash-${{ env.COMMIT_HASH }}" \
              007-scraper-testnet .
            cd ../008-scraper-testnet-ibm
            helm upgrade --install -n dia-lumina \
              --set repository.tag="commit-hash-${{ env.COMMIT_HASH }}" \
              008-scraper-testnet .
            cd ../009-scraper-testnet-ibm
            helm upgrade --install -n dia-lumina \
              --set repository.tag="commit-hash-${{ env.COMMIT_HASH }}" \
              009-scraper-testnet .
          
          # Clean up CA certificate 
          if [ -f /tmp/ca.pem ]; then shred -u /tmp/ca.pem; fi

      - name: Cleanup IBM Cluster CA Certificate
        run: |
          # Securely remove the CA certificate file
          if [ -f /tmp/ca.pem ]; then shred -u /tmp/ca.pem; fi

      # Cleanup the cloned repository
      - name: Cleanup cloned repository and log out from IBM
        run: |
          rm -rf lumina-infra
          ibmcloud logout