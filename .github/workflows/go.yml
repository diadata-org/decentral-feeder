name: Go CI/CD

on:
  push:
    branches:
      - master
      - cr_automation
  pull_request:
    branches:
      - master

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      # Get dependencies
      - name: Get dependencies
        run: go mod tidy

      # Build the Go application
      - name: Build
        run: go build -v ./...

      # Test the Go application
      - name: Test
        run: go test -v ./...

  push_image:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Install IBM Cloud CLI and Container Registry CLI
      - name: Install IBM Cloud CLI
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud plugin install container-registry -f

      # Log in to IBM Cloud
      - name: Log in to IBM Cloud
        env:
          IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
        run: |
          ibmcloud login --apikey $IBM_CLOUD_API_KEY --no-region
          ibmcloud target -r us-south
          ibmcloud target -g Default

      # Get Unix Timestamp
      - name: Get Unix Timestamp
        id: get_timestamp
        run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

      # Build and Tag the Docker image
      - name: Build and Tag Docker image
        run: |
          docker build -f build/Dockerfile-diaDecentralOracleService -t us.icr.io/dia-registry/oracles/diadecentraloracleservice:unix-${{ env.TIMESTAMP }} .

      # Push the Docker image to IBM Cloud Container Registry
      - name: Push Docker image
        run: |
          ibmcloud cr login
          docker push us.icr.io/dia-registry/oracles/diadecentraloracleservice:unix-${{ env.TIMESTAMP }}

      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      # Install Helm
      - name: Install Helm
        run: |
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      # kubectl config with service account 
      - name: Configure kubectl with Service Account
        env:
          TOKEN: ${{ secrets.K8S_SERVICE_ACCOUNT_TOKEN }}
          CLUSTER_NAME: dia-k3s
          API_SERVER:  https://49.13.80.204:6443 # Example: https://your-api-server:6443
        run: |
          set -e  # Exit immediately if a command exits with a non-zero status
          set -u  # Treat unset variables as an error

          # Debugging: Check environment variables
          echo "Cluster Name: $CLUSTER_NAME"
          echo "API Server: $API_SERVER"
          echo "Token length: ${#TOKEN}"  # Check the token length for sanity
          # Ensure token does not contain unexpected newline characters
          TOKEN=$(echo "$TOKEN" | tr -d '\n')
          # Set cluster
          kubectl config set-cluster "$CLUSTER_NAME" --server="$API_SERVER" --insecure-skip-tls-verify=true
          # Set credentials
          kubectl config set-credentials github-actions-sa --token="$TOKEN"
          # Set context
          kubectl config set-context dia-k3s --cluster="$CLUSTER_NAME" --user=github-actions-sa
          # Use context
          kubectl config use-context dia-k3s
          
      - name: Deploy to Kubernetes using Helm
        env:
          TIMESTAMP: ${{ env.TIMESTAMP }}
        run: |
          kubectl config view
          kubectl cluster-info
          helm upgrade --install diadecentraloracleservice ./diadecentraloracleservice \
            --set image.repository=us.icr.io/dia-registry/oracles/diadecentraloracleservice \
            --set image.tag=unix-${{ env.TIMESTAMP }}



